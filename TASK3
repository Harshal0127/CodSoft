[2:35 pm, 24/01/2024] Rupali Rane: class ToDoList:
    def _init_(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append(task)
        print(f'Task "{task}" added successfully.')

    def view_tasks(self):
        if not self.tasks:
            print('No tasks available.')
        else:
            print('Tasks:')
            for i, task in enumerate(self.tasks, 1):
                print(f'{i}. {task}')

    def remove_task(self, task_index):
        if 1 <= task_index <= len(self.tasks):
            removed_task = self.tasks.pop(task_index - 1)
            print(f'Task "{removed_task}" removed successfully.')
        else:
            print('Invalid task index.')

def main():
    todo_list = ToDoList()

    while True:
        print("\n1. Add Task\n2. View Taâ€¦
[2:42 pm, 24/01/2024] Rupali Rane: import random
import string

def generate_password(length=12):
    characters = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(random.choice(characters) for _ in range(length))
    return password

def main():
    print("Password Generator")

    while True:
        length = int(input("Enter the desired password length (default is 12): ") or 12)
        if length <= 0:
            print("Invalid length. Please enter a positive integer.")
            continue

        password = generate_password(length)
        print(f'Generated Password: {password}')

        generate_again = input("Generate another password? (yes/no): ").lower()
        if generate_again != 'yes':
            break

if _name_ == "_main_":
    main()
